services:

  tempo-distributor:
    image: &tempoImage grafana/tempo:latest
    command: "-target=distributor -config.file=/etc/tempo.yaml"
    restart: always
    volumes:
      - ./tempo-distributed.yaml:/etc/tempo.yaml
    ports:
      - "3200"
    networks:
      - observability       
  
  tempo-ingester-0:
    image: *tempoImage
    command: "-target=ingester -config.file=/etc/tempo.yaml"
    restart: always
    volumes:
      - ./tempo-distributed.yaml:/etc/tempo.yaml
    ports:
      - "3200"
    networks:
      - observability
      
  tempo-ingester-1:
    image: *tempoImage
    command: "-target=ingester -config.file=/etc/tempo.yaml"
    restart: always
    volumes:
      - ./tempo-distributed.yaml:/etc/tempo.yaml
    ports:
      - "3200"
    networks:
      - observability
      
  tempo-ingester-2:
    image: *tempoImage
    command: "-target=ingester -config.file=/etc/tempo.yaml"
    restart: always
    volumes:
      - ./tempo-distributed.yaml:/etc/tempo.yaml
    ports:
      - "3200"
    networks:
      - observability
      
  tempo-query-frontend:
    image: *tempoImage
    command: "-target=query-frontend -config.file=/etc/tempo.yaml -log.level=debug"
    restart: always
    volumes:
      - ./tempo-distributed.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200"
    networks:
      - observability
      
  tempo-querier:
    image: *tempoImage
    command: "-target=querier -config.file=/etc/tempo.yaml -log.level=debug"
    restart: always
    volumes:
      - ./tempo-distributed.yaml:/etc/tempo.yaml
    ports:
      - "3200"
    networks:
      - observability
        
  tempo-compactor:
    image: *tempoImage
    command: "-target=compactor -config.file=/etc/tempo.yaml"
    restart: always
    volumes:
      - ./tempo-distributed.yaml:/etc/tempo.yaml
    ports:
      - "3200"
    networks:
      - observability
        
  tempo-metrics-generator:
    image: *tempoImage
    command: "-target=metrics-generator -config.file=/etc/tempo.yaml"
    restart: always
    volumes:
      - ./tempo-distributed.yaml:/etc/tempo.yaml
    ports:
      - "3200"
    networks:
      - observability
        
  # Since the Loki containers are running as user 10001 and the mounted data volume is owned by root,
  # Loki would not have permissions to create the directories.
  # Therefore the init container changes permissions of the mounted directory.
  loki-init:
    image: &lokiImage grafana/loki:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/loki"
    volumes:
      - ./loki:/loki
    networks:
      - observability

  loki-gateway:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
      - "3100"
    networks:
      - observability
    depends_on:
      - loki-read
      - loki-write
      - loki-backend
    restart: always

  loki-read:
    image: *lokiImage
    volumes:
      - ./loki-distributed.yaml:/etc/loki/loki.yaml
    # only needed for interactive debugging with dlv
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "40000-40002:40000" # makes the replicas available on ports 40000, 40001, 40002
    command: "-config.file=/etc/loki/loki.yaml -target=read -legacy-read-mode=false"
    networks:
      - observability
    restart: always
    deploy:
      mode: replicated
      replicas: 3

  loki-write:
    image: *lokiImage
    volumes:
      - ./loki-distributed.yaml:/etc/loki/loki.yaml
    # only needed for interactive debugging with dlv
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "50000-50002:40000" #  makes the replicas available on ports 50000, 50001, 50002
    command: "-config.file=/etc/loki/loki.yaml -target=write"
    networks:
      - observability
    restart: always
    deploy:
      mode: replicated
      replicas: 3

  loki-backend:
    image: *lokiImage
    volumes:
      - ./loki-distributed.yaml:/etc/loki/loki.yaml
    # only needed for interactive debugging with dlv
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - apparmor=unconfined
    ports:
      - "3100"
      - "7946"
      # uncomment to use interactive debugging
      # - "60000-60002:40000" #  makes the replicas available on ports 60000, 60001, 60002
    command: "-config.file=/etc/loki/loki.yaml -target=backend -legacy-read-mode=false"
    networks:
      - observability
    restart: always
    deploy:
      mode: replicated
      replicas: 3

  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ACCESS_KEY=observability
      - MINIO_SECRET_KEY=supersecret
    ports:
      - "9001:9001"
    entrypoint:
      - sh
      - -euc
      - mkdir -p /data/tempo && minio server /data --console-address ':9001'
      - mkdir -p /data/loki-data && mkdir -p /data/loki-ruler
    networks:
      - observability

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - observability

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"
    networks:
      - observability
        
  alloy:
    image: grafana/alloy:latest
    volumes:
      - ./config.alloy:/etc/alloy/config.alloy
    command:
      - run
      - /etc/alloy/config.alloy
      - --storage.path=/var/lib/alloy/data
      - --server.http.listen-addr=0.0.0.0:12345
    ports:
      - "12345:12345"
      - "4317:4317" 
      - "4318:4318" 
      - "4319:4319" 
    networks:
      - observability
        
networks:
  observability:
    
volumes:
  loki:
